# Generated by Django 4.0.10 on 2024-07-09 11:42

import apps.common.helpers
import apps.common.model_fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('identity', models.CharField(max_length=512)),
                ('coupon_code', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('is_flat_rate_discount', models.BooleanField(default=False)),
                ('discount_in_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('discount_in_percentage_amount_cap', models.FloatField(blank=True, default=None, null=True)),
                ('discount_in_amount', models.FloatField(blank=True, default=None, null=True)),
                ('enable_usage_limit', models.BooleanField(default=False)),
                ('maximum_number_of_usages', models.PositiveIntegerField(default=0)),
                ('per_user_usage_limit', models.IntegerField(default=0)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('discount_usage', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=512)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('identity', models.CharField(max_length=512)),
                ('description', models.TextField()),
                ('rating', models.FloatField(default=5, validators=[apps.common.helpers.validate_rating])),
                ('what_will_you_learn', models.TextField(blank=True, default=None, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('make_this_subscription_plan_popular', models.BooleanField(default=False)),
                ('skill_level_assesment', models.BooleanField(default=False)),
                ('interactive_practices', models.BooleanField(default=False)),
                ('certification', models.BooleanField(default=False)),
                ('virtual_labs', models.BooleanField(default=False)),
                ('basic_to_advance_level', models.BooleanField(default=False)),
                ('is_duration', models.BooleanField(default=False)),
                ('duration', models.IntegerField(blank=True, default=None, null=True)),
                ('is_yearly_subscription_plan_active', models.BooleanField(default=True)),
                ('is_monthly_subscription_plan_active', models.BooleanField(default=True)),
                ('yearly_price_in_inr', models.FloatField(blank=True, default=0)),
                ('is_gst_inclusive_for_yearly', models.BooleanField(default=True)),
                ('monthly_price_in_inr', models.FloatField(blank=True, default=0)),
                ('is_gst_inclusive_for_monthly', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=512)),
                ('certification_paths', models.ManyToManyField(blank=True, to='learning.certificationpath')),
                ('courses', models.ManyToManyField(blank=True, to='learning.course')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlanSaleDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('sale_code', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('is_yearly_subscription_plan_offer', models.BooleanField(default=True)),
                ('is_yearly_discount_percentage', models.BooleanField(default=True)),
                ('yearly_discount_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('is_yearly_discount_amount', models.BooleanField(default=False)),
                ('yearly_discount_amount', models.FloatField(blank=True, default=None, null=True)),
                ('is_monthly_subscription_plan_offer', models.BooleanField(default=False)),
                ('is_monthly_discount_percentage', models.BooleanField(default=True)),
                ('monthly_discount_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('is_monthly_discount_amount', models.BooleanField(default=False)),
                ('monthly_discount_amount', models.FloatField(blank=True, default=None, null=True)),
                ('sale_for', models.CharField(choices=[('learning_content', 'learning_content'), ('subscription_plan', 'subscription_plan')], default='subscription_plan', max_length=512)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.subscriptionplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlanImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('file', apps.common.model_fields.AppSingleFileField(max_length=512, upload_to='files/subscription_plan/image/')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlanCustomerEnquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=512)),
                ('email', models.CharField(max_length=512)),
                ('phone_number', models.CharField(max_length=512)),
                ('is_customer', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.subscriptionplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='image',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.subscriptionplanimage'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='learning_paths',
            field=models.ManyToManyField(blank=True, to='learning.learningpath'),
        ),
        migrations.CreateModel(
            name='SaleDiscountImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('file', apps.common.model_fields.AppSingleFileField(max_length=512, upload_to='files/sale_discount/image/')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('identity', models.CharField(max_length=512)),
                ('sale_code', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('description', models.TextField()),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('sale_discount_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('sale_for', models.CharField(choices=[('learning_content', 'learning_content'), ('subscription_plan', 'subscription_plan')], default='learning_content', max_length=512)),
                ('certification_paths', models.ManyToManyField(blank=True, to='learning.certificationpath')),
                ('courses', models.ManyToManyField(blank=True, to='learning.course')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.salediscountimage')),
                ('learning_paths', models.ManyToManyField(blank=True, to='learning.learningpath')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('razorpay_order_id', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('razorpay_order_data', models.JSONField(blank=True, default=None, null=True)),
                ('verification_signature', models.JSONField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('on_process', 'on_process'), ('success', 'success'), ('failed', 'failed')], default='on_process', max_length=512)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cart_data', models.JSONField(blank=True, default=None, null=True)),
                ('total_price', models.FloatField(blank=True, default=None, null=True)),
                ('discount_price', models.FloatField(blank=True, default=None, null=True)),
                ('total_price_after_discount', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('on_process', 'on_process'), ('success', 'success'), ('failed', 'failed')], default='on_process', max_length=512)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('discount_applied', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.discount')),
                ('payment', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.payment')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
